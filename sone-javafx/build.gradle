buildscript {
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.google.osdetector'

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
	compile project(':sone-core')
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'
	compile group: 'com.helger', name: 'ph-css', version: '6.1.1'
    compile group: 'com.helger', name: 'ph-commons', version: '9.2.0'
    compile group: 'de.jensd', name: 'fontawesomefx-fontawesome', version: '4.7.0-9.1.2'
    compile group: 'de.jensd', name: 'fontawesomefx-commons', version: '9.1.2'
    compile "org.openjfx:javafx-base:11.0.1:$platform"
    compile "org.openjfx:javafx-graphics:11.0.1:$platform"
    compile "org.openjfx:javafx-controls:11.0.1:$platform"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
        
    }
}

ext.moduleName = 'kim.kohlhaas.sone.javafx'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
        ]
        classpath = files()  
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath, 
            '--add-modules', 'junit',  
            '--add-reads', "$moduleName=junit", 
            '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath, 
        ]
        classpath = files()
    }
}

test {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
            '--module-path', classpath.asPath, 
            '--add-modules', 'ALL-MODULE-PATH', 
            '--add-reads', "$moduleName=junit", 
            '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath, 
        ]
        classpath = files()
    }
}

